{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":9193558,"sourceType":"datasetVersion","datasetId":5557850}],"dockerImageVersionId":30747,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/adedapoadeniran/ai-qr-code-decoder?scriptVersionId=193090538\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# # # This is my attempt of deep learning modeling of QR Code version 1 image regression task.","metadata":{}},{"cell_type":"code","source":"# Install the necessary libraries\n!pip install autokeras tensorflow tf2onnx\n\nimport tensorflow as tf\nimport autokeras as ak\nfrom sklearn.model_selection import KFold\nimport tf2onnx\nimport onnx\nimport os\n\n# Load the dataset\ndata_dir = '/kaggle/input/qrcodev1/qrcode/v1'\nimg_size = (290, 290)  # Adjust the image size if necessary\nbatch_size = 16  # Adjust batch size as needed\n\ndef decode_img(file_path):\n    # Load and preprocess the image\n    img = tf.io.read_file(file_path)\n    img = tf.image.decode_png(img, channels=3)\n    img = tf.image.resize(img, img_size)\n    img = tf.cast(img, tf.float32) / 255.0\n    return img\n\ndef get_label(file_path):\n    # Extract the label (number) from the file name\n    parts = tf.strings.split(file_path, os.sep)\n    label_str = parts[-1]\n    label_str = tf.strings.regex_replace(label_str, \".png\", \"\")\n    label = tf.strings.to_number(label_str, out_type=tf.float32)\n    return label\n\ndef process_path(file_path):\n    img = decode_img(file_path)\n    label = get_label(file_path)\n    return img, label\n\nlist_ds = tf.data.Dataset.list_files(str(data_dir + '/*.png'))\nlabeled_ds = list_ds.map(process_path, num_parallel_calls=tf.data.AUTOTUNE)\nlabeled_ds = labeled_ds.cache().shuffle(buffer_size=1000).batch(batch_size).prefetch(buffer_size=tf.data.AUTOTUNE)\n\n# Extract features and labels\ndef split_features_labels(dataset):\n    X, y = [], []\n    for img, label in dataset:\n        X.append(img)\n        y.append(label)\n    X = tf.concat(X, axis=0)\n    y = tf.concat(y, axis=0)\n    return X, y\n\nX, y = split_features_labels(labeled_ds)\n\n# Initialize the AutoKeras AutoModel for image regression\nreg = ak.ImageRegressor(\n    max_trials=10,  # Adjust max_trials as needed\n    overwrite=True\n)\n\n# Perform 5-fold cross-validation\nkf = KFold(n_splits=5, shuffle=True, random_state=42)\nfold_mae = []\n\nfor train_index, test_index in kf.split(X):\n    # Convert indices to TensorFlow tensors\n    X_train = tf.gather(X, train_index).numpy()\n    X_test = tf.gather(X, test_index).numpy()\n    y_train = tf.gather(y, train_index).numpy()\n    y_test = tf.gather(y, test_index).numpy()\n    \n    # Train the model on the current fold\n    reg.fit(X_train, y_train, epochs=20)\n    \n    # Evaluate the model on the current fold\n    evaluation = reg.evaluate(X_test, y_test)\n    \n    # Extract the Mean Absolute Error (MAE)\n    mae = evaluation[0]  # Assuming MAE is the first metric\n    fold_mae.append(mae)\n    print(f\"Fold MAE: {mae}\")\n\n# Calculate and print the average MAE across all folds\naverage_mae = sum(fold_mae) / len(fold_mae)\nprint(f\"Average Cross-Validation MAE: {average_mae}\")\n\n# Export the model to ONNX format\nmodel = reg.export_model()\nspec = (tf.TensorSpec([None, *img_size, 3], dtype=tf.float32),)\nonnx_model, _ = tf2onnx.convert.from_keras(model, input_signature=spec)\n\n# Save the model\nonnx.save(onnx_model, \"autokeras_QRregressor.onnx\")\n","metadata":{"scrolled":true,"_kg_hide-output":true,"execution":{"iopub.status.busy":"2024-08-18T04:27:35.146161Z","iopub.execute_input":"2024-08-18T04:27:35.147054Z","iopub.status.idle":"2024-08-18T05:52:57.93304Z","shell.execute_reply.started":"2024-08-18T04:27:35.14702Z","shell.execute_reply":"2024-08-18T05:52:57.932013Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"Trial 10 Complete [00h 08m 28s]\nval_loss: 15379105.0\n\nBest val_loss So Far: 115601.4375\nTotal elapsed time: 01h 12m 02s\nEpoch 1/20\n\u001b[1m62/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━\u001b[0m \u001b[1m0s\u001b[0m 401ms/step - loss: 23812056.0000 - mean_squared_error: 23812056.0000","output_type":"stream"},{"name":"stderr","text":"E0000 00:00:1723959753.465976      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959753.672807      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959754.507230      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959754.735284      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959755.639570      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959755.827382      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959756.688633      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959756.887457      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959757.280369      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723959757.503923      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m87s\u001b[0m 756ms/step - loss: 23525726.0000 - mean_squared_error: 23525726.0000\nEpoch 2/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 910690.4375 - mean_squared_error: 910690.4375\nEpoch 3/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 406175.8125 - mean_squared_error: 406175.8125\nEpoch 4/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 402ms/step - loss: 270220.6875 - mean_squared_error: 270220.6875\nEpoch 5/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 239183.4219 - mean_squared_error: 239183.4219\nEpoch 6/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 219674.4375 - mean_squared_error: 219674.4375\nEpoch 7/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 212455.2656 - mean_squared_error: 212455.2656\nEpoch 8/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 192305.5781 - mean_squared_error: 192305.5781\nEpoch 9/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 183483.0781 - mean_squared_error: 183483.0781\nEpoch 10/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 169791.6719 - mean_squared_error: 169791.6719\nEpoch 11/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 400ms/step - loss: 155186.3750 - mean_squared_error: 155186.3750\nEpoch 12/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 141066.8906 - mean_squared_error: 141066.8906\nEpoch 13/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 107957.7266 - mean_squared_error: 107957.7266\nEpoch 14/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 124666.9453 - mean_squared_error: 124666.9453\nEpoch 15/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 104618.5547 - mean_squared_error: 104618.5547\nEpoch 16/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 398ms/step - loss: 80185.9141 - mean_squared_error: 80185.9141\nEpoch 17/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 398ms/step - loss: 65756.0000 - mean_squared_error: 65756.0000\nEpoch 18/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 48954.2969 - mean_squared_error: 48954.2969\nEpoch 19/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 399ms/step - loss: 50570.3867 - mean_squared_error: 50570.3867\nEpoch 20/20\n\u001b[1m63/63\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 398ms/step - loss: 51739.8125 - mean_squared_error: 51739.8125\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/saving/saving_lib.py:576: UserWarning: Skipping variable loading for optimizer 'adam', because it has 2 variables whereas the saved optimizer has 314 variables. \n  saveable.load_own_variables(weights_store.get(inner_path))\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m15/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m━━\u001b[0m \u001b[1m0s\u001b[0m 113ms/step - loss: 130663.9688 - mean_squared_error: 130663.9688","output_type":"stream"},{"name":"stderr","text":"E0000 00:00:1723960261.400358      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\nE0000 00:00:1723960261.637808      90 gpu_timer.cc:183] Delay kernel timed out: measured time has sub-optimal accuracy. There may be a missing warmup execution, please investigate in Nsight Systems.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 412ms/step - loss: 130254.6484 - mean_squared_error: 130254.6484\nFold MAE: 127184.75\n\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 167ms/step - loss: 111951.6797 - mean_squared_error: 111951.6797\nFold MAE: 108877.3671875\n\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 167ms/step - loss: 127722.5703 - mean_squared_error: 127722.5703\nFold MAE: 118923.671875\n\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 168ms/step - loss: 110522.7734 - mean_squared_error: 110522.7734\nFold MAE: 105062.8828125\n\u001b[1m16/16\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m6s\u001b[0m 166ms/step - loss: 122224.6875 - mean_squared_error: 122224.6875\nFold MAE: 123772.0546875\nAverage Cross-Validation MAE: 116764.1453125\n","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1723960367.648366      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960367.648587      34 devices.cc:67] Number of eligible GPUs (core count >= 8, compute capability >= 0.0): 1\nI0000 00:00:1723960367.649177      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960367.649437      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960367.649593      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960367.649821      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960367.649976      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.282874      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.283209      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.283492      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.283786      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.284034      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.786748      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.786961      34 devices.cc:67] Number of eligible GPUs (core count >= 8, compute capability >= 0.0): 1\nI0000 00:00:1723960370.787657      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.787867      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.788016      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.788232      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\nI0000 00:00:1723960370.788400      34 cuda_executor.cc:1015] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355\n","output_type":"stream"}]}]}